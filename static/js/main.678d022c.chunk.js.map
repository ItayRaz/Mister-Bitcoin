{"version":3,"sources":["cmps/MovePreview.js","cmps/MoveList.js","modules/user/UserService.js","modules/user/actions.js","services/BitcoinService.js","views/HomePage.js","modules/user/views/SignUpPage.js","cmps/ContactPreview.js","cmps/ContactList.js","cmps/ContactFilter.js","modules/contact/ContactService.js","modules/contact/actions.js","modules/contact/views/ContactPage.js","views/StatisticPage.js","cmps/TranferFund.js","modules/contact/views/ContactDetailsPage.js","modules/contact/views/ContactEditPage.js","cmps/Header.js","App.js","serviceWorker.js","modules/contact/reducers.js","modules/user/reducers.js","store.js","index.js"],"names":["MovePreview","move","className","to","Moment","at","fromNow","amount","MoveList","moves","map","toId","key","UserService","logIn","user","newUser","name","coins","localStorage","setItem","JSON","stringify","getLoggedUser","parse","getItem","transferFund","fund","contact","unshift","_id","Date","now","setCurrUser","type","dispatch","loggedUser","console","log","axios","Axios","create","BitCoinService","getRate","a","async","get","rate","data","getMarketPrice","marketPrice","values","HomePage","state","bitCoinRate","signOut","clear","props","history","push","this","setState","class","onClick","length","React","Component","mapDispatchToProps","connect","currUser","SignUpPage","updateUser","ev","target","value","prevState","saveUser","preventDefault","src","alt","onSubmit","onChange","ContactPreview","ContactList","contacts","ContactFilter","onFilter","getContacts","filterBy","Promise","resolve","reject","term","contactsToReturn","toLocaleLowerCase","filter","includes","phone","email","sort","b","getContactById","id","find","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","txt","possible","i","charAt","Math","floor","random","_makeId","_addContact","getEmptyContact","setCurrContact","loadCurrContact","ContactService","setContacts","updateContact","ContactPage","handleFilter","loadContacts","StatisticPage","y","width","height","margin","color","TransferFund","transfer","updateTransfer","currContact","ContactDetailsPage","movesWithContact","match","params","ContactEditPage","removeContact","savedContact","Header","App","exact","path","component","Boolean","window","location","hostname","INITIAL_STATE","rootReducer","combineReducers","action","idx","slice","store","createStore","applyMiddleware","thunk","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qTAIe,SAASA,EAAT,GAA8B,IAARC,EAAO,EAAPA,KAEjC,OACI,yBAAKC,UAAU,gBACX,oCAAUD,EAAKE,IACf,6BAAMC,IAAOH,EAAKI,IAAIC,WACtB,6BAAML,EAAKM,OAAX,IAAmB,uBAAGL,UAAU,mB,WCL7B,SAASM,EAAT,GAA4B,IAARC,EAAO,EAAPA,MAC/B,OACI,6BAASP,UAAU,aACdO,EAAMC,KAAI,SAAAT,GAAI,OAAI,kBAAC,IAAD,CAAME,GAAE,mBAAcF,EAAKU,OAAQ,kBAACX,EAAD,CAAaC,KAAMA,EAAMW,IAAKX,EAAKU,YCR9F,IAAME,EAAc,CACvBC,MASJ,SAAeC,GACX,IAAMC,EAAU,CAAEC,KAAMF,EAAKE,KAAMC,MAAO,IAAKT,MAAO,IACtDU,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,KAV5CO,cAIJ,WACI,OAAOF,KAAKG,MAAML,aAAaM,QAAQ,UAJvCC,aAYJ,SAAsBC,EAAMC,GACxB,IAAIb,EAAOM,KAAKG,MAAML,aAAaM,QAAQ,SAI3C,OAHAV,EAAKG,OAASS,EACdZ,EAAKN,MAAMoB,QAAQ,CAAElB,KAAMiB,EAAQE,IAAK3B,GAAIyB,EAAQX,KAAMZ,GAAI0B,KAAKC,MAAOzB,OAAQoB,IAClFR,aAAaC,QAAQ,OAAQC,KAAKC,UAAUP,IACrCA,IClBX,IAAMkB,EAAc,SAAClB,GACjB,MAAO,CAACmB,KAAM,gBAAiBnB,SAUtBQ,EAAgB,WACzB,OAAO,SAACY,GACJ,IAAMC,EAAavB,EAAYU,gBAG/B,OAFAc,QAAQC,IAAI,aAAcF,GAEnBD,EAASF,EAAYG,M,eCjBhCG,E,OAAQC,EAAMC,OAAO,IAIZC,EAAiB,CAC1BC,QASJ,0BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACwBL,EAAMO,IAAI,iEADlC,cACUC,EADV,yBAEWA,EAAKC,MAFhB,sCARIC,eAaJ,0BAAAL,EAAAC,OAAA,kEAAAD,EAAA,MAC8BL,EAAMO,IAAI,2FADxC,cACUI,EADV,yBAEWA,EAAYF,KAAKG,QAF5B,uC,ICbMC,E,2MACFC,MAAQ,CACJtC,KAAM,GACNuC,YAAa,G,EAUjBC,QAAU,WACNpC,aAAaqC,QACb,EAAKC,MAAMC,QAAQC,KAAK,Y,kKARLC,KAAKH,MAAMlC,gBACdR,MAAM6C,KAAKH,MAAMC,QAAQC,KAAK,W,mBACtBjB,EAAeC,W,OAAnCW,E,OACJM,KAAKC,SAAS,CAAEP,gB,gFAQV,IACEvC,EAAS6C,KAAKH,MAAd1C,KACRsB,QAAQC,IAAI,OAAQvB,GAFf,IAIGuC,EAAgBM,KAAKP,MAArBC,YACR,OAAIvC,EACA,iCACI,yBAAKb,UAAU,gBACX,qCAAWa,EAAKE,MAChB,4BAAI,uBAAG6C,MAAM,iBAAb,WAAyC/C,EAAKG,OAC9C,4BAAI,uBAAGhB,UAAU,mBAAjB,SAA6CoD,GAC7C,4BAAQS,QAASH,KAAKL,SAAtB,aAEHxC,EAAKN,MAAMuD,OAAS,GAAK,wBAAI9D,UAAU,gBAAd,eAC1B,kBAACM,EAAD,CAAUC,MAAOM,EAAKN,SAGlB,2C,GAnCGwD,IAAMC,WA6CvBC,EAAqB,CACvB5C,iBAGW6C,eAVS,SAACf,GACrB,MAAO,CACHtC,KAAMsC,EAAMtC,KAAKsD,YAUrBF,EAFWC,CAGbhB,G,gBCvDIkB,E,2MAEFjB,MAAQ,CACJtC,KAAM,M,EAIVwD,WAAa,SAACC,GAAQ,IAAD,EACOA,EAAGC,OAAnBC,EADS,EACTA,MAAOzD,EADE,EACFA,KACfoB,QAAQC,IAAI,EAAKe,OACjB,EAAKQ,UAAS,SAAAc,GACV,MAAO,CACH5D,KAAK,eACE4D,EAAU5D,KADb,eAECE,EAAOyD,S,EAOxBE,SAAY,SAACJ,GACTA,EAAGK,iBACH,EAAKpB,MAAM3C,MAAM,EAAKuC,MAAMtC,MAC5B,EAAK0C,MAAMC,QAAQC,KAAK,M,wEAIxB,OACI,6BAASzD,UAAU,mDACf,yBAAK4E,IAAI,mEAAmEC,IAAI,KAChF,0BAAM7E,UAAU,2BAA2B8E,SAAWpB,KAAKgB,UACvD,2BAAO1E,UAAU,4BACjB,wDACA,2BAAO+E,SAAUrB,KAAKW,WAAYtD,KAAK,OAAOiB,KAAK,UAEnD,iD,GApCK+B,IAAMC,WAiDzBC,EAAqB,CACvBrD,MHhDiB,SAACC,GAClB,OAAO,SAACoB,GACJ,IAAMkC,EAAYxD,EAAYC,MAAMC,GACpC,OAAOoB,EAASF,EAAYoC,OGgDrBD,eAVS,SAACf,GACrB,MAAO,CACHtC,KAAMsC,EAAMtC,KAAKsD,YAUrBF,EAFWC,CAGbE,GC1DK,SAASY,EAAT,GAAsC,IAAZtD,EAAW,EAAXA,QAC7B,OACI,yBAAK1B,UAAU,gBACX,yBAAK4E,IAAG,+BAA0BlD,EAAQX,QAD9C,IAC6D,8BAAOW,EAAQX,OCC7E,SAASkE,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SAC1B,OACI,iCACI,wBAAIlF,UAAU,gBACTkF,EAAS1E,KAAI,SAAAkB,GAAO,OACjB,kBAAC,IAAD,CAAMzB,GAAE,mBAAcyB,EAAQE,KAAOlB,IAAKgB,EAAQE,KAC9C,4BAAI,kBAACoD,EAAD,CAAgBtD,QAASA,WCV9C,SAASyD,EAAT,GAAoC,IAAZC,EAAW,EAAXA,SAC3B,OACI,2BAAOpD,KAAK,OAAO+C,SAAU,SAACT,GAAD,OAAOc,EAASd,EAAGC,OAAOC,UCJhD,OACba,YA4IF,WAAwC,IAAlBC,EAAiB,uDAAN,KAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAwDaC,EAxDTC,EAAmBT,EACnBI,GAAYA,EAASI,OAwD3BA,GADeA,EAtDeJ,EAASI,MAuD3BE,oBAvDRD,EAwDGT,EAASW,QAAQ,SAAAnE,GACtB,OAAOA,EAAQX,KAAK6E,oBAAoBE,SAASJ,IAC1ChE,EAAQqE,MAAMH,oBAAoBE,SAASJ,IAC3ChE,EAAQsE,MAAMJ,oBAAoBE,SAASJ,OAzDlDF,EAAaG,EAlBJM,MAAM,SAACvD,EAAGwD,GACnB,OAAIxD,EAAE3B,KAAK6E,oBAAsBM,EAAEnF,KAAK6E,qBAC9B,EAENlD,EAAE3B,KAAK6E,oBAAsBM,EAAEnF,KAAK6E,oBAC/B,EAGF,UAvITO,eAqJF,SAAyBC,GACrB,OAAO,IAAIb,SAAQ,SAACC,EAASC,GAC3B,IAAM/D,EAAUwD,EAASmB,MAAM,SAAA3E,GAAO,OAAIA,EAAQE,MAAQwE,KAC1D1E,EAAU8D,EAAQ9D,GAAW+D,EAAO,cAAD,OAAeW,EAAf,oBAvJvCE,cA2JF,SAAuBF,GACrB,OAAO,IAAIb,SAAQ,SAACC,EAASC,GAC3B,IAAMc,EAAQrB,EAASsB,WAAW,SAAA9E,GAAO,OAAIA,EAAQE,MAAQwE,MAC9C,IAAXG,GACFrB,EAASuB,OAAOF,EAAO,GAGzBf,EAAQN,OAjKVwB,YAuLF,SAAqBhF,GACnB,OAAOA,EAAQE,IAnBjB,SAAwBF,GACtB,OAAO,IAAI6D,SAAQ,SAACC,EAASC,GAC3B,IAAMc,EAAQrB,EAASsB,WAAW,SAAAG,GAAC,OAAIjF,EAAQE,MAAQ+E,EAAE/E,QAC1C,IAAX2E,IACFrB,EAASqB,GAAS7E,GAEpB8D,EAAQ9D,MAaWkF,CAAelF,GATtC,SAAqBA,GACnB,OAAO,IAAI6D,SAAQ,SAACC,EAASC,GAC3B/D,EAAQE,IA6BZ,WAGE,IAH6B,IAAdkC,EAAa,uDAAJ,GACpB+C,EAAM,GACNC,EAAW,iEACNC,EAAI,EAAGA,EAAIjD,EAAQiD,IAC1BF,GAAOC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAAShD,SAE7D,OAAO+C,EAnCSO,GACdlC,EAASzB,KAAK/B,GACd8D,EAAQ9D,MAKqC2F,CAAY3F,IAvL3D4F,gBA0LF,WACE,MAAO,CACLvG,KAAM,GACNiF,MAAO,GACPD,MAAO,MAzLLb,EAAW,CACf,CACE,IAAO,2BACP,KAAQ,aACR,MAAS,yBACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,gBACR,MAAS,4BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,iBACR,MAAS,6BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,cACR,MAAS,0BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,iBACR,MAAS,6BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,aACR,MAAS,yBACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,kBACR,MAAS,8BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,cACR,MAAS,0BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,kBACR,MAAS,8BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,eACR,MAAS,2BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,YACR,MAAS,wBACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,kBACR,MAAS,8BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,eACR,MAAS,2BACT,MAAS,qBAEX,CACE,IAAO,2BAEP,KAAQ,iBACR,MAAS,6BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,eACR,MAAS,2BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,iBACR,MAAS,6BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,cACR,MAAS,0BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,eACR,MAAS,2BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,eACR,MAAS,2BACT,MAAS,sBC1Hb,IAAMqC,EAAiB,SAAC7F,GACpB,MAAO,CAACM,KAAM,mBAAoBN,YAGzB8F,EAAmB,SAACpB,GAC7B,OAAO,SAAOnE,GAAP,eAAAS,EAAAC,OAAA,kEAAAD,EAAA,MACmB+E,EAAetB,eAAeC,IADjD,cACG1E,EADH,yBAEIO,EAASsF,EAAe7F,KAF5B,uCAMLgG,EAAc,SAACxC,GACjB,MAAO,CAAClD,KAAM,eAAgBkD,aAU5ByC,EAAgB,SAACjG,GACnB,MAAO,CAACM,KAAM,eAAgBN,YAU5B4E,EAAgB,SAACF,GACnB,MAAO,CAACpE,KAAM,iBAAkBoE,OC3B9BwB,E,2MACFzE,MAAQ,CACJ+B,SAAU,GACVW,OAAQ,I,EAUZgC,aAAe,SAAOrD,GAAP,eAAA9B,EAAAC,OAAA,iDACPkD,EAAS,IACNH,KAAOlB,EACd,EAAKjB,MAAMuE,aAAajC,GAHb,sC,mFAPQnC,KAAKH,MAAMlC,gBACdR,MAAM6C,KAAKH,MAAMC,QAAQC,KAAK,WAC9CC,KAAKH,MAAMuE,iB,+BAWL,IACE5C,EAAaxB,KAAKH,MAAlB2B,SACR,OACI,6BAASlF,UAAU,gBACf,wCACA,kBAACmF,EAAD,CAAeC,SAAU1B,KAAKmE,eAC9B,kBAAC5C,EAAD,CAAaC,SAAUA,IACvB,kBAAC,IAAD,CAAMjF,GAAG,iBAAgB,gCAAQ,uBAAGD,UAAU,+B,GA1BpC+D,IAAMC,WAsC1BC,EAAqB,CACvB6D,aD/BwB,SAACjC,GACzB,OAAO,SAAO5D,GAAP,eAAAS,EAAAC,OAAA,kEAAAD,EAAA,MACoB+E,EAAepC,YAAYQ,IAD/C,cACGX,EADH,yBAEIjD,EAASyF,EAAYxC,KAFzB,uCC+BP7D,iBAGW6C,eAXS,SAACf,GACrB,MAAO,CACH+B,SAAU/B,EAAMzB,QAAQwD,YAW5BjB,EAFWC,CAGb0D,G,QClDWG,EAAb,2MAEI5E,MAAQ,CACJH,YAAa,IAHrB,qLAOgCR,EAAeO,kBAP/C,OAOYC,EAPZ,OAQQU,KAAKC,SAAS,CAACX,gBARvB,gFAWc,IACCA,EAAeU,KAAKP,MAApBH,YACP,OACI,iCACI,qCACA,kBAAC,aAAD,CAAYF,KAAME,EAAYxC,KAAI,SAAAgE,GAAK,OAAIA,EAAMwD,KAAKC,MAAO,IAAKC,OAAQ,GAAIC,OAAQ,GAClF,kBAAC,iBAAD,CAAgBC,MAAM,eAjB1C,GAAmCrE,IAAMC,WCCnCqE,E,2MAEFlF,MAAQ,CACJmF,SAAU,M,EAIdC,eAAiB,SAACjE,GAAQ,IAAD,EACGA,EAAGC,OAAnBC,EADa,EACbA,MAAOzD,EADM,EACNA,KACfoB,QAAQC,IAAI,EAAKe,OACjB,EAAKQ,UAAS,SAAAc,GACV,MAAO,CACH6D,SAAS,eACF7D,EADC,eAEH1D,GAAQyD,S,EAMzB8D,SAAW,SAAOhE,GAAP,iBAAA5B,EAAAC,OAAA,uDACP2B,EAAGK,iBACEjD,EAAW,EAAK6B,MAAhB7B,QACA4G,EAAY,EAAKnF,MAAjBmF,SAHE,WAAA5F,EAAA,MAID,EAAKa,MAAM+E,SAASA,EAASA,SAAS5G,IAJrC,OAKP,EAAK6B,MAAMC,QAAQC,KAAK,YALjB,sC,wEASP,OACI,6BAASzD,UAAU,oBACf,2BAAO+E,SAAUrB,KAAK6E,eAAgBxH,KAAK,WAAWiB,KAAK,WAC3D,4BAAQ6B,QAASH,KAAK4E,UAAtB,iB,GAhCWtE,aA8CrBC,EAAqB,CACvBqE,SX/BoB,SAAC7G,EAAMC,GAC3B,OAAO,SAACO,GACJ,IAAMpB,EAAOF,EAAYa,aAAaC,EAAMC,GAG5C,OAFAS,QAAQC,IAAIvB,GAELoB,EAASF,EAAYlB,OW6BrBqD,eAVS,SAACf,GACrB,MAAO,CACHzB,QAASyB,EAAMzB,QAAQ8G,eAU3BvE,EAFWC,CAGbmE,GCnDII,E,2MACFtF,MAAQ,CACJzB,QAAS,GACTnB,MAAO,I,EAWXmI,iBAAmB,WACf,IAAMnI,EAAQ,EAAKgD,MAAM1C,KAAKN,MACtBmB,EAAY,EAAK6B,MAAjB7B,QACR,OAAOnB,EAAMsF,QAAO,SAAA9F,GAAI,OAAIA,EAAKU,OAASiB,EAAQE,Q,kKAV1CwE,EAAO1C,KAAKH,MAAMoF,MAAMC,OAAxBxC,G,mBACF1C,KAAKH,MAAMiE,gBAAgBpB,I,iCAC3B/E,K,OACNc,QAAQC,IAAI,QAASsB,KAAKH,OAC1BG,KAAKC,SAAS,CAAEpD,MAAOmD,KAAKgF,qB,gFAStB,IACEhH,EAAYgC,KAAKH,MAAjB7B,QACAnB,EAAUmD,KAAKP,MAAf5C,MACR,OAAImB,EACA,iCACI,yBAAK1B,UAAU,uBACX,yBAAKA,UAAU,kCACX,kBAAC,IAAD,CAAMC,GAAG,YAAW,gCAAQ,uBAAGD,UAAU,iCACzC,kBAAC,IAAD,CAAMC,GAAE,eAAUyB,EAAQE,MAAO,gCAAQ,uBAAG5B,UAAU,yBAG9D,yBAAKA,UAAU,yCACX,yBAAK4E,IAAG,+BAA0BlD,EAAQX,MAAQ8D,IAAI,KACtD,yBAAK7E,UAAU,0CACX,4BAAK0B,EAAQX,MACb,4BAAKW,EAAQsE,OACb,4BAAKtE,EAAQqE,OACjB,kBAAC,EAAD,CAAcrE,QAASA,EAAS8B,QAASE,KAAKH,MAAMC,WAEnDjD,EAAMuD,OAAS,GAAK,kBAACxD,EAAD,CAAUC,MAAOA,MAIrC,8C,GA3CYyD,aAuD3BC,GAAqB,CACvBuD,kBACAnG,iBAGW6C,gBAbS,SAACf,GACrB,MAAO,CACHzB,QAASyB,EAAMzB,QAAQ8G,YACvB3H,KAAMsC,EAAMtC,KAAKsD,YAYrBF,GAFWC,CAGbuE,GChEII,G,2MAEF1F,MAAQ,CACJzB,QAAS,M,EAcbiG,cAAgB,SAACrD,GAAQ,IAAD,EACIA,EAAGC,OAAnBC,EADY,EACZA,MAAOzD,EADK,EACLA,KACf,EAAK4C,UAAS,SAAAc,GACV,MAAO,CACH/C,QAAQ,eACD+C,EAAU/C,QADV,eAEFX,EAAOyD,S,EAMxBsE,cAAgB,0BAAApG,EAAAC,OAAA,uDACNyD,EAAK,EAAKjD,MAAMzB,QAAQE,IADlB,WAAAc,EAAA,MAEN,EAAKa,MAAMuF,cAAc1C,IAFnB,OAGZ,EAAK7C,MAAMC,QAAQC,KAAK,YAHZ,sC,EAMhBiD,YAAc,SAAOpC,GAAP,SAAA5B,EAAAC,OAAA,uDACV2B,EAAGK,iBADO,WAAAjC,EAAA,MAEJ,EAAKa,MAAMmD,YAAY,EAAKvD,MAAMzB,UAF9B,OAGV,EAAK6B,MAAMC,QAAQC,KAAK,YAHd,sC,kKA3BJ2C,EAAO1C,KAAKH,MAAMoF,MAAMC,OAAxBxC,I,0CAEI1C,KAAKH,MAAMiE,gBAAgBpB,I,gCAC1B1C,KAAKC,SAAS,CAAEjC,QAASgC,KAAKH,MAAM7B,W,OAE1CA,EAAU+F,EAAeH,kB,OAC9B5D,KAAKC,SAAS,CAAEjC,Y,gFA2BV,IACEA,EAAYgC,KAAKP,MAAjBzB,QACR,OAAOA,GACH,6BAAS1B,UAAU,gBACf,yBAAKA,UAAU,yBACX,yBAAK4E,IAAG,+BAA0BlD,EAAQX,MAAQ8D,IAAI,KACtD,0BAAM7E,UAAU,yBACZ,2BAAOA,UAAU,QACb,sCACA,2BAAO+E,SAAUrB,KAAKiE,cAAe5G,KAAK,OAAOiB,KAAK,OAAOwC,MAAO9C,EAAQX,QAEhF,2BAAOf,UAAU,QACb,uCACA,2BAAO+E,SAAUrB,KAAKiE,cAAe5G,KAAK,QAAQiB,KAAK,QAAQwC,MAAO9C,EAAQsE,SAElF,2BAAOhG,UAAU,QACb,uCACA,2BAAO+E,SAAUrB,KAAKiE,cAAe5G,KAAK,QAAQiB,KAAK,SAASwC,MAAO9C,EAAQqE,WAI3F,yBAAK/F,UAAU,+BACX,4BAAQA,UAAU,WAAW6D,QAASH,KAAKgD,aAA3C,gBACA,4BAAQ1G,UAAU,aAAa6D,QAASH,KAAKoF,eAA7C,gB,GAhEU9E,aA6ExBC,GAAqB,CACvBuD,kBACAd,YL1DuB,SAAChF,GACxB,OAAO,SAAOO,GAAP,eAAAS,EAAAC,OAAA,kEAAAD,EAAA,MACwB+E,EAAef,YAAYhF,IADnD,cACGqH,EADH,yBAEI9G,EAAS0F,EAAcoB,KAF3B,uCK0DPD,cLhDyB,SAAC1C,GAC1B,OAAO,SAAOnE,GAAP,SAAAS,EAAAC,OAAA,kEAAAD,EAAA,MACG+E,EAAenB,cAAcF,IADhC,gCAEInE,EAASqE,EAAcF,KAF3B,wCKkDIlC,gBAZS,SAACf,GACrB,MAAO,CACHzB,QAASyB,EAAMzB,QAAQ8G,eAY3BvE,GAFWC,CAGb2E,ICzFa,SAASG,KACpB,OACI,6BAAShJ,UAAU,UACf,kBAAC,IAAD,CAAMC,GAAG,KAAI,uBAAGD,UAAU,gBAC1B,kBAAC,IAAD,CAAMC,GAAG,YAAW,uBAAGD,UAAU,iBACjC,kBAAC,IAAD,CAAMC,GAAG,cAAa,uBAAGD,UAAU,wBCmBhCiJ,OAhBf,WACE,OACE,yBAAKjJ,UAAU,OACb,kBAACgJ,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAIC,UAAWlG,IACjC,kBAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,UAAUC,UAAWhF,IACvC,kBAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,WAAWC,UAAWxB,IACxC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,qBAAqBC,UAAWP,KAClD,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,eAAeC,UAAWX,KAC5C,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,aAAaC,UAAWrB,OCV9BsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASb,MACvB,2D,+BCjBAc,GAAgB,CAClBjB,YAAa,KACbtD,SAAU,ICFd,IAAMuE,GAAgB,CAClBtF,SAAU,MCMd,IAAMuF,GAAcC,aAAgB,CAChCjI,QFHW,WAAuD,IAA/ByB,EAA8B,uDAAvBsG,GAAeG,EAAQ,uCACjE,OAAQA,EAAO5H,MACX,IAAK,mBAED,OAAO,eACAmB,EADP,CAEIqF,YAAaoB,EAAOlI,UAE5B,IAAK,eACD,OAAO,eACAyB,EADP,CAEI+B,SAAU0E,EAAO1E,WAGzB,IAAK,eACD,IAAM2E,EAAM1G,EAAM+B,SAASsB,WAAU,SAAAgC,GACjC,OAAOA,EAAY5G,MAAQgI,EAAOlI,QAAQE,OAE9C,OAAO,eACAuB,EADP,CAEI+B,SAAS,GAAD,oBACD/B,EAAM+B,SAAS4E,MAAM,EAAGD,IADvB,CAEJD,EAAOlI,SAFH,aAGDyB,EAAM+B,SAAS4E,MAAMD,EAAM,OAG1C,IAAK,iBACD,IAAMtD,EAAQpD,EAAM+B,SAASsB,WAAU,SAAAgC,GACnC,OAAOA,EAAY5G,MAAQgI,EAAOxD,MAEtC,OAAO,eACAjD,EADP,CAEI+B,SAAS,GAAD,oBACD/B,EAAM+B,SAAS4E,MAAM,EAAGvD,IADvB,aAEDpD,EAAM+B,SAAS4E,MAAMvD,EAAQ,OAI5C,QACI,OAAOpD,IEnCftC,KDLW,WAAoD,IAA/BsC,EAA8B,uDAAvBsG,GAAeG,EAAQ,uCAC9D,OAAQA,EAAO5H,MACX,IAAK,gBACL,OAAO,eACAmB,EADP,CAEIgB,SAAUyF,EAAO/I,OAIrB,QACI,OAAOsC,MCMJ4G,GAJDC,aACVN,GACAO,aAAgBC,O,SCTd1G,GAAU2G,eAGhBC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,IACb,kBAAC,IAAD,CAAQvG,QAASA,IACb,kBAAC,GAAD,QAIR8G,SAASC,eAAe,SJ+GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.678d022c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Moment from 'moment';\r\n// import 'moment-timezone';\r\n\r\nexport default function MovePreview({move}) {\r\n    \r\n    return (\r\n        <div className=\"move-preview\">\r\n            <div>To: {move.to}</div>\r\n            <div>{Moment(move.at).fromNow()}</div>\r\n            <div>{move.amount} <i className=\"fas fa-coins\"></i></div>\r\n        </div>\r\n    )   \r\n} ","import React, { Component } from 'react';\r\nimport MovePreview from './MovePreview';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function MoveList ({moves}){\r\n    return (\r\n        <section className=\"move-list\">\r\n            {moves.map(move => <Link to={`/contact/${move.toId}`}><MovePreview move={move} key={move.toId}></MovePreview></Link>)}\r\n        </section>\r\n    )\r\n}","export const UserService = {\r\n    logIn,\r\n    getLoggedUser,\r\n    transferFund\r\n}\r\n\r\nfunction getLoggedUser() {    \r\n    return JSON.parse(localStorage.getItem('user'));\r\n}\r\n\r\nfunction logIn(user) {\r\n    const newUser = { name: user.name, coins: 100, moves: [] }\r\n    localStorage.setItem('user', JSON.stringify(newUser));\r\n}\r\n\r\nfunction transferFund(fund, contact) {\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    user.coins -= fund;\r\n    user.moves.unshift({ toId: contact._id, to: contact.name, at: Date.now(), amount: fund })\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    return user;\r\n}","import { UserService } from './UserService';\r\n\r\nconst setCurrUser = (user) => {\r\n    return {type: 'SET_CURR_USER', user}\r\n}\r\n\r\nexport const logIn = (user) => {\r\n    return (dispatch) => {\r\n        const currUser =  UserService.logIn(user)\r\n        return dispatch(setCurrUser(currUser))\r\n    }\r\n}\r\n\r\nexport const getLoggedUser = () => {\r\n    return (dispatch) => {\r\n        const loggedUser = UserService.getLoggedUser();\r\n        console.log('loggedUser', loggedUser);\r\n        \r\n        return dispatch(setCurrUser(loggedUser))\r\n    }\r\n}\r\n\r\nexport const transfer = (fund, contact) => {\r\n    return (dispatch) => {\r\n        const user = UserService.transferFund(fund, contact);\r\n        console.log(user);\r\n        \r\n        return dispatch(setCurrUser(user))\r\n    }\r\n}","import Axios from 'axios';\r\nvar axios = Axios.create({\r\n    // withCredentials: true\r\n});\r\n\r\nexport const BitCoinService = {\r\n    getRate,\r\n    getMarketPrice\r\n}\r\n\r\nfunction handelErr(err) {\r\n    console.dir(err)\r\n    throw err;\r\n}\r\n\r\nasync function getRate() {\r\n    const rate =  await axios.get('https://blockchain.info/tobtc?currency=USD&value=1&cors=true');    \r\n    return rate.data\r\n}\r\n\r\nasync function getMarketPrice() {\r\n    const marketPrice = await axios.get('https://api.blockchain.info/charts/market-price?timespan=1months&format=json&cors=true');\r\n    return marketPrice.data.values;\r\n}","import React from 'react';\r\nimport MoveList from '../cmps/MoveList'\r\nimport { getLoggedUser } from '../modules/user/actions'\r\nimport { connect } from 'react-redux'\r\nimport { BitCoinService } from '../services/BitcoinService';\r\n\r\n\r\nclass HomePage extends React.Component {\r\n    state = {\r\n        user: '',\r\n        bitCoinRate: 0\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const loggedUser = this.props.getLoggedUser()\r\n        if (!loggedUser.user) this.props.history.push('/signUp')\r\n        let bitCoinRate = await BitCoinService.getRate();\r\n        this.setState({ bitCoinRate })\r\n    }\r\n\r\n    signOut = () => {\r\n        localStorage.clear();\r\n        this.props.history.push('/signUp')\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props;\r\n        console.log('user', user);\r\n\r\n        const { bitCoinRate } = this.state;\r\n        if (user) return (\r\n            <section>\r\n                <div className=\"user-details\">\r\n                    <h2>Hello {user.name}</h2>\r\n                    <h3><i class=\"fas fa-coins\"></i> Coins: {user.coins}</h3>\r\n                    <h3><i className=\"fab fa-bitcoin\"></i> BTC: {bitCoinRate}</h3>\r\n                    <button onClick={this.signOut}>Sign Out</button>\r\n                </div>\r\n                {user.moves.length > 0 && <h2 className=\"moves-header\">Your Moves:</h2>}\r\n                <MoveList moves={user.moves}></MoveList>\r\n            </section>\r\n        )\r\n        else return <h2>no User</h2>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.currUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getLoggedUser\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(HomePage)","import React, { Component } from 'react'\r\nimport { logIn } from '../actions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass SignUpPage extends React.Component {\r\n\r\n    state = {\r\n        user: null\r\n    }\r\n\r\n\r\n    updateUser = (ev) => {\r\n        const { value, name } = ev.target\r\n        console.log(this.state);\r\n        this.setState(prevState => {\r\n            return {\r\n                user: {\r\n                    ...prevState.user,\r\n                    [name]: value\r\n                    \r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    saveUser =  (ev) => {\r\n        ev.preventDefault()        \r\n        this.props.logIn(this.state.user);\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"sign-up-page flex column align-center container\">\r\n                <img src=\"https://www.buybitcoinworldwide.com/img/goodicons/doublecoin.png\" alt=\"\"/>\r\n                <form className=\"flex column align-center\" onSubmit= {this.saveUser}>\r\n                    <label className=\"flex column align-center\">\r\n                    <div>Please Enter Your Name:</div>   \r\n                    <input onChange={this.updateUser} name=\"name\" type=\"text\" />\r\n                    </label>\r\n                    <button>Sign Up</button>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.currUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    logIn\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SignUpPage)","import React from 'react';\r\n\r\nexport function ContactPreview({ contact }) {\r\n    return (\r\n        <div className=\"contact-prev\">\r\n            <img src={`https://robohash.org/${contact.name}`}></img> <span>{contact.name}</span>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { ContactPreview } from './ContactPreview'\r\n\r\n\r\nexport function ContactList({ contacts }) {\r\n    return (\r\n        <section>\r\n            <ul className=\"contact-list\">\r\n                {contacts.map(contact =>\r\n                    <Link to={`/contact/${contact._id}`} key={contact._id}>\r\n                        <li><ContactPreview contact={contact}></ContactPreview></li>\r\n                    </Link>)}\r\n            </ul>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function ContactFilter({onFilter}) {\r\n    return (\r\n        <input type=\"text\" onChange={(ev)=> onFilter(ev.target.value)} />\r\n    )\r\n}\r\n","export default {\n  getContacts,\n  getContactById,\n  deleteContact,\n  saveContact,\n  getEmptyContact\n}\n\n\n\nconst contacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\", \n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\", \n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\", \n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\", \n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\", \n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\", \n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\", \n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\", \n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\", \n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\", \n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\", \n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\", \n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n \n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\", \n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\", \n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\", \n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\", \n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\", \n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\nfunction sort(arr) {\n  return arr.sort( (a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n\n    return 0;\n  })\n}\n\nfunction getContacts (filterBy = null) {\n  return new Promise((resolve, reject) => { \n    var contactsToReturn = contacts;\n    if (filterBy && filterBy.term) {\n      contactsToReturn = filter(filterBy.term)\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById (id) {\n    return new Promise((resolve, reject) => {\n      const contact = contacts.find( contact => contact._id === id)\n      contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n    })\n}\n\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => { \n    contact._id = _makeId()\n    contacts.push(contact)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter (term) {  \n  term = term.toLocaleLowerCase()\n  return contacts.filter( contact => {\n    return contact.name.toLocaleLowerCase().includes(term) ||\n           contact.phone.toLocaleLowerCase().includes(term) ||\n           contact.email.toLocaleLowerCase().includes(term)\n  })\n}\n\n\n\nfunction _makeId(length = 10) {\n  var txt = ''\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}","import ContactService from './ContactService'\r\n\r\nconst setCurrContact = (contact) => {\r\n    return {type: 'SET_CURR_CONTACT', contact}\r\n}\r\n\r\nexport const loadCurrContact  = (id) => {\r\n    return async (dispatch) => {\r\n        const contact = await ContactService.getContactById(id);\r\n        return dispatch(setCurrContact(contact))\r\n    }\r\n}\r\n\r\nconst setContacts = (contacts) => {\r\n    return {type: 'SET_CONTACTS', contacts}\r\n}\r\n\r\nexport const loadContacts = (filter) => {\r\n    return async (dispatch) => {\r\n        const contacts = await ContactService.getContacts(filter);        \r\n        return dispatch(setContacts(contacts));\r\n    }\r\n} \r\n\r\nconst updateContact = (contact) => {\r\n    return {type: 'SAVE_CONTACT', contact}\r\n}\r\n\r\nexport const saveContact = (contact) => {\r\n    return async (dispatch) => {\r\n        const savedContact = await ContactService.saveContact(contact)\r\n        return dispatch(updateContact(savedContact))\r\n    }\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n    return {type: 'DELETE_CONTACT', id}\r\n}\r\n\r\nexport const removeContact = (id) => {\r\n    return async (dispatch) => {\r\n        await ContactService.deleteContact(id);\r\n        return dispatch(deleteContact(id))\r\n    }\r\n}","import React from 'react';\r\n\r\nimport {ContactList} from '../../../cmps/ContactList'\r\nimport {ContactFilter} from '../../../cmps/ContactFilter'\r\nimport { loadContacts } from '../actions'\r\nimport { getLoggedUser } from '../../user/actions'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass ContactPage extends React.Component {\r\n    state = {\r\n        contacts: [],\r\n        filter: ''\r\n    }\r\n    componentDidMount() {\r\n        const loggedUser = this.props.getLoggedUser();\r\n        if (!loggedUser.user) this.props.history.push('/signUp')\r\n        this.props.loadContacts()\r\n        // let contacts = await ContactService.getContacts();\r\n        // this.setState({ contacts })\r\n    }\r\n\r\n    handleFilter = async (value) => {\r\n        let filter = {};\r\n        filter.term = value;\r\n        this.props.loadContacts(filter)\r\n    }\r\n    \r\n    render() {\r\n        const { contacts } = this.props;\r\n        return (\r\n            <section className=\"contact-page\">\r\n                <h1>Contacts</h1>\r\n                <ContactFilter onFilter={this.handleFilter}></ContactFilter>\r\n                <ContactList contacts={contacts}></ContactList>\r\n                <Link to=\"/contact/edit\"><button><i className=\"fas fa-plus add-btn\"></i></button></Link>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contact.contacts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadContacts,\r\n    getLoggedUser\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactPage)","import React from 'react';\r\n\r\nimport { BitCoinService } from '../services/BitcoinService';\r\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\r\n\r\nexport class StatisticPage extends React.Component {\r\n\r\n    state = {\r\n        marketPrice: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let marketPrice = await BitCoinService.getMarketPrice();        \r\n        this.setState({marketPrice})\r\n    }\r\n\r\n    render() {\r\n        const {marketPrice} = this.state;\r\n        return (\r\n            <section>\r\n                <h1>Stats</h1>\r\n                <Sparklines data={marketPrice.map(value => value.y)}  width={100} height={20} margin={5}>\r\n                    <SparklinesLine color=\"blue\" />\r\n                </Sparklines>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { transfer } from '../modules/user/actions'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n\r\nclass TransferFund extends Component {\r\n\r\n    state = {\r\n        transfer: null\r\n    }\r\n    \r\n\r\n    updateTransfer = (ev) => {\r\n        const { value, name } = ev.target\r\n        console.log(this.state);\r\n        this.setState(prevState => {\r\n            return {\r\n                transfer: {\r\n                    ...prevState,\r\n                    [name]: +value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    transfer = async (ev) => {\r\n        ev.preventDefault();\r\n        let {contact} = this.props;\r\n        let {transfer} = this.state\r\n        await this.props.transfer(transfer.transfer,contact);\r\n        this.props.history.push('/contact')        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"transfer-section\">\r\n                <input onChange={this.updateTransfer} name=\"transfer\" type=\"number\" />\r\n                <button onClick={this.transfer}>Transfer</button>\r\n            </section>\r\n\r\n              \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.currContact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    transfer\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TransferFund)","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport MoveList from '../../../cmps/MoveList'\r\nimport TransferFund from '../../../cmps/TranferFund'\r\nimport { loadCurrContact } from '../actions'\r\nimport { getLoggedUser } from '../../user/actions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass ContactDetailsPage extends Component {\r\n    state = {\r\n        contact: {},\r\n        moves: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        await this.props.loadCurrContact(id);\r\n        await getLoggedUser();\r\n        console.log('props', this.props);\r\n        this.setState({ moves: this.movesWithContact() })\r\n    }\r\n\r\n    movesWithContact = () => {\r\n        const moves = this.props.user.moves;\r\n        const { contact } = this.props;\r\n        return moves.filter(move => move.toId === contact._id)\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.props;\r\n        const { moves } = this.state;\r\n        if (contact) return (\r\n            <section>\r\n                <div className=\"flex justify-center\">\r\n                    <div className=\"flex space-between action-btns\">\r\n                        <Link to=\"/contact\"><button><i className=\"fas fa-long-arrow-alt-left\"></i></button></Link>\r\n                        <Link to={`edit/${contact._id}`}><button><i className=\"fas fa-user-edit\"></i></button></Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"contact-details flex column container\">\r\n                    <img src={`https://robohash.org/${contact.name}`} alt=\"\" />\r\n                    <div className=\"flex column space-between main-details\">\r\n                        <h3>{contact.name}</h3>\r\n                        <h4>{contact.email}</h4>\r\n                        <h4>{contact.phone}</h4>\r\n                    <TransferFund contact={contact} history={this.props.history}></TransferFund>\r\n                    </div>\r\n                    {moves.length > 0 && <MoveList moves={moves}></MoveList>}\r\n                </div>\r\n            </section>\r\n        )\r\n        else return (<h1>no contact</h1>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.currContact,\r\n        user: state.user.currUser\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadCurrContact,\r\n    getLoggedUser\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactDetailsPage)","import React, { Component } from 'react'\r\nimport ContactService from '../ContactService'\r\nimport { loadCurrContact } from '../actions'\r\nimport { saveContact } from '../actions'\r\nimport { removeContact } from '../actions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass ContactEditPage extends Component {\r\n\r\n    state = {\r\n        contact: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let contact;\r\n        let { id } = this.props.match.params\r\n        if (id) {\r\n            await this.props.loadCurrContact(id);\r\n            return this.setState({ contact: this.props.contact })\r\n        }\r\n        else contact = ContactService.getEmptyContact()\r\n        this.setState({ contact })\r\n    }\r\n\r\n    updateContact = (ev) => {\r\n        const { value, name } = ev.target\r\n        this.setState(prevState => {\r\n            return {\r\n                contact: {\r\n                    ...prevState.contact,\r\n                    [name]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    removeContact = async () => {\r\n        const id = this.state.contact._id\r\n        await this.props.removeContact(id)\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    saveContact = async (ev) => {\r\n        ev.preventDefault()\r\n        await this.props.saveContact(this.state.contact)\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.state;\r\n        return contact && (\r\n            <section className=\"contact-edit\">\r\n                <div className=\"container flex column\">\r\n                    <img src={`https://robohash.org/${contact.name}`} alt=\"\" />\r\n                    <form className=\"edit-form flex column\">\r\n                        <label className=\"flex\">\r\n                            <div>Name:</div>\r\n                            <input onChange={this.updateContact} name=\"name\" type=\"text\" value={contact.name} />\r\n                        </label>\r\n                        <label className=\"flex\">\r\n                            <div>Email:</div>\r\n                            <input onChange={this.updateContact} name=\"email\" type=\"email\" value={contact.email} />\r\n                        </label>\r\n                        <label className=\"flex\">\r\n                            <div>Phone:</div>\r\n                            <input onChange={this.updateContact} name=\"phone\" type=\"number\" value={contact.phone} />\r\n                        </label>\r\n                    </form>\r\n                </div>\r\n                <div className=\"edit-btns flex space-evenly\">\r\n                    <button className=\"save-btn\" onClick={this.saveContact}>Save Contact</button>\r\n                    <button className=\"delete-btn\" onClick={this.removeContact}>Delete</button>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.currContact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadCurrContact,\r\n    saveContact,\r\n    removeContact\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactEditPage)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Header() {\r\n    return (\r\n        <section className=\"header\">\r\n            <Link to=\"/\"><i className=\"fa fa-home\"></i></Link>\r\n            <Link to=\"/contact\"><i className=\"fa fa-users\"></i></Link>\r\n            <Link to=\"/statistic\"><i className=\"fas fa-chart-line\"></i></Link>\r\n        </section>\r\n    )\r\n}","import React from 'react';\nimport './styles/global.scss'\nimport { Route, Switch } from 'react-router-dom'\nimport  HomePage  from './views/HomePage'\nimport  SignUpPage  from './modules/user/views/SignUpPage'\nimport  ContactPage  from './modules/contact/views/ContactPage'\nimport { StatisticPage } from './views/StatisticPage'\nimport ContactDetailsPage from './modules/contact/views/ContactDetailsPage'\nimport ContactEditPage from './modules/contact/views//ContactEditPage'\nimport Header from './cmps/Header'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage}></Route>\n        <Route exact path=\"/signUp\" component={SignUpPage}></Route>\n        <Route exact path=\"/contact\" component={ContactPage}></Route>\n        <Route exact path=\"/contact/edit/:id?\" component={ContactEditPage}></Route>\n        <Route exact path=\"/contact/:id\" component={ContactDetailsPage}></Route>\n        <Route exact path=\"/statistic\" component={StatisticPage}></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst INITIAL_STATE = {\r\n    currContact: null,\r\n    contacts: []\r\n}\r\n\r\nexport default function contactReducer(state= INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_CURR_CONTACT':\r\n            \r\n            return {\r\n                ...state,\r\n                currContact: action.contact\r\n            }\r\n        case 'SET_CONTACTS':\r\n            return {\r\n                ...state,\r\n                contacts: action.contacts\r\n            }\r\n\r\n        case 'SAVE_CONTACT':\r\n            const idx = state.contacts.findIndex(currContact => {\r\n                return currContact._id === action.contact._id\r\n            })\r\n            return {\r\n                ...state,\r\n                contacts: [\r\n                    ...state.contacts.slice(0, idx),\r\n                    action.contact,\r\n                    ...state.contacts.slice(idx + 1)\r\n                ]\r\n            }\r\n        case 'DELETE_CONTACT':\r\n            const index = state.contacts.findIndex(currContact => {\r\n                return currContact._id === action.id\r\n            })\r\n            return {\r\n                ...state,\r\n                contacts: [\r\n                    ...state.contacts.slice(0, index),\r\n                    ...state.contacts.slice(index + 1)\r\n                ]\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nconst INITIAL_STATE = {\r\n    currUser: null,\r\n}\r\n\r\nexport default function userReducer(state= INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_CURR_USER':\r\n        return {\r\n            ...state,\r\n            currUser: action.user\r\n        }\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nimport contactReducer from './modules/contact/reducers'\r\nimport userReducer from './modules/user/reducers'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    contact: contactReducer,\r\n    user: userReducer\r\n})\r\n\r\n\r\n\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n)\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n// import './styles/global.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nconst history = createBrowserHistory()\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>\n    ,\n    document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}